// Code generated by protoc-gen-go. DO NOT EDIT.
// source: atomicswap.proto

package protobind

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
// Shared with dragon - keep coins in sync
//
type COIN int32

const (
	COIN_BTC COIN = 0
	COIN_LTC COIN = 1
	COIN_XZC COIN = 2
	COIN_DCR COIN = 3
)

var COIN_name = map[int32]string{
	0: "BTC",
	1: "LTC",
	2: "XZC",
	3: "DCR",
}

var COIN_value = map[string]int32{
	"BTC": 0,
	"LTC": 1,
	"XZC": 2,
	"DCR": 3,
}

func (x COIN) String() string {
	return proto.EnumName(COIN_name, int32(x))
}

func (COIN) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{0}
}

type ERRNO int32

const (
	ERRNO_OK          ERRNO = 0
	ERRNO_LIBS        ERRNO = 1
	ERRNO_UNSUPPORTED ERRNO = 2
)

var ERRNO_name = map[int32]string{
	0: "OK",
	1: "LIBS",
	2: "UNSUPPORTED",
}

var ERRNO_value = map[string]int32{
	"OK":          0,
	"LIBS":        1,
	"UNSUPPORTED": 2,
}

func (x ERRNO) String() string {
	return proto.EnumName(ERRNO_name, int32(x))
}

func (ERRNO) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{1}
}

type PingWalletRPCRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	Hostport             string   `protobuf:"bytes,5,opt,name=hostport,proto3" json:"hostport,omitempty"`
	Rpcuser              string   `protobuf:"bytes,6,opt,name=rpcuser,proto3" json:"rpcuser,omitempty"`
	Rpcpass              string   `protobuf:"bytes,7,opt,name=rpcpass,proto3" json:"rpcpass,omitempty"`
	Wpass                string   `protobuf:"bytes,8,opt,name=wpass,proto3" json:"wpass,omitempty"`
	Certs                string   `protobuf:"bytes,9,opt,name=certs,proto3" json:"certs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingWalletRPCRequest) Reset()         { *m = PingWalletRPCRequest{} }
func (m *PingWalletRPCRequest) String() string { return proto.CompactTextString(m) }
func (*PingWalletRPCRequest) ProtoMessage()    {}
func (*PingWalletRPCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{0}
}

func (m *PingWalletRPCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingWalletRPCRequest.Unmarshal(m, b)
}
func (m *PingWalletRPCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingWalletRPCRequest.Marshal(b, m, deterministic)
}
func (m *PingWalletRPCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingWalletRPCRequest.Merge(m, src)
}
func (m *PingWalletRPCRequest) XXX_Size() int {
	return xxx_messageInfo_PingWalletRPCRequest.Size(m)
}
func (m *PingWalletRPCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingWalletRPCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingWalletRPCRequest proto.InternalMessageInfo

func (m *PingWalletRPCRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *PingWalletRPCRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *PingWalletRPCRequest) GetHostport() string {
	if m != nil {
		return m.Hostport
	}
	return ""
}

func (m *PingWalletRPCRequest) GetRpcuser() string {
	if m != nil {
		return m.Rpcuser
	}
	return ""
}

func (m *PingWalletRPCRequest) GetRpcpass() string {
	if m != nil {
		return m.Rpcpass
	}
	return ""
}

func (m *PingWalletRPCRequest) GetWpass() string {
	if m != nil {
		return m.Wpass
	}
	return ""
}

func (m *PingWalletRPCRequest) GetCerts() string {
	if m != nil {
		return m.Certs
	}
	return ""
}

type PingWalletRPCResponse struct {
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingWalletRPCResponse) Reset()         { *m = PingWalletRPCResponse{} }
func (m *PingWalletRPCResponse) String() string { return proto.CompactTextString(m) }
func (*PingWalletRPCResponse) ProtoMessage()    {}
func (*PingWalletRPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{1}
}

func (m *PingWalletRPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingWalletRPCResponse.Unmarshal(m, b)
}
func (m *PingWalletRPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingWalletRPCResponse.Marshal(b, m, deterministic)
}
func (m *PingWalletRPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingWalletRPCResponse.Merge(m, src)
}
func (m *PingWalletRPCResponse) XXX_Size() int {
	return xxx_messageInfo_PingWalletRPCResponse.Size(m)
}
func (m *PingWalletRPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingWalletRPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingWalletRPCResponse proto.InternalMessageInfo

func (m *PingWalletRPCResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *PingWalletRPCResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

type NewAddressRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	Hostport             string   `protobuf:"bytes,5,opt,name=hostport,proto3" json:"hostport,omitempty"`
	Rpcuser              string   `protobuf:"bytes,6,opt,name=rpcuser,proto3" json:"rpcuser,omitempty"`
	Rpcpass              string   `protobuf:"bytes,7,opt,name=rpcpass,proto3" json:"rpcpass,omitempty"`
	Wpass                string   `protobuf:"bytes,8,opt,name=wpass,proto3" json:"wpass,omitempty"`
	Certs                string   `protobuf:"bytes,9,opt,name=certs,proto3" json:"certs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAddressRequest) Reset()         { *m = NewAddressRequest{} }
func (m *NewAddressRequest) String() string { return proto.CompactTextString(m) }
func (*NewAddressRequest) ProtoMessage()    {}
func (*NewAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{2}
}

func (m *NewAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAddressRequest.Unmarshal(m, b)
}
func (m *NewAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAddressRequest.Marshal(b, m, deterministic)
}
func (m *NewAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAddressRequest.Merge(m, src)
}
func (m *NewAddressRequest) XXX_Size() int {
	return xxx_messageInfo_NewAddressRequest.Size(m)
}
func (m *NewAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewAddressRequest proto.InternalMessageInfo

func (m *NewAddressRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *NewAddressRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *NewAddressRequest) GetHostport() string {
	if m != nil {
		return m.Hostport
	}
	return ""
}

func (m *NewAddressRequest) GetRpcuser() string {
	if m != nil {
		return m.Rpcuser
	}
	return ""
}

func (m *NewAddressRequest) GetRpcpass() string {
	if m != nil {
		return m.Rpcpass
	}
	return ""
}

func (m *NewAddressRequest) GetWpass() string {
	if m != nil {
		return m.Wpass
	}
	return ""
}

func (m *NewAddressRequest) GetCerts() string {
	if m != nil {
		return m.Certs
	}
	return ""
}

type NewAddressResponse struct {
	Address              string   `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAddressResponse) Reset()         { *m = NewAddressResponse{} }
func (m *NewAddressResponse) String() string { return proto.CompactTextString(m) }
func (*NewAddressResponse) ProtoMessage()    {}
func (*NewAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{3}
}

func (m *NewAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAddressResponse.Unmarshal(m, b)
}
func (m *NewAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAddressResponse.Marshal(b, m, deterministic)
}
func (m *NewAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAddressResponse.Merge(m, src)
}
func (m *NewAddressResponse) XXX_Size() int {
	return xxx_messageInfo_NewAddressResponse.Size(m)
}
func (m *NewAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewAddressResponse proto.InternalMessageInfo

func (m *NewAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NewAddressResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *NewAddressResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

type InitiateRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	Hostport             string   `protobuf:"bytes,5,opt,name=hostport,proto3" json:"hostport,omitempty"`
	Rpcuser              string   `protobuf:"bytes,6,opt,name=rpcuser,proto3" json:"rpcuser,omitempty"`
	Rpcpass              string   `protobuf:"bytes,7,opt,name=rpcpass,proto3" json:"rpcpass,omitempty"`
	Wpass                string   `protobuf:"bytes,8,opt,name=wpass,proto3" json:"wpass,omitempty"`
	Certs                string   `protobuf:"bytes,9,opt,name=certs,proto3" json:"certs,omitempty"`
	Secrethash           string   `protobuf:"bytes,10,opt,name=secrethash,proto3" json:"secrethash,omitempty"`
	PartAddress          string   `protobuf:"bytes,11,opt,name=part_address,json=partAddress,proto3" json:"part_address,omitempty"`
	Amount               int64    `protobuf:"varint,12,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitiateRequest) Reset()         { *m = InitiateRequest{} }
func (m *InitiateRequest) String() string { return proto.CompactTextString(m) }
func (*InitiateRequest) ProtoMessage()    {}
func (*InitiateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{4}
}

func (m *InitiateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitiateRequest.Unmarshal(m, b)
}
func (m *InitiateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitiateRequest.Marshal(b, m, deterministic)
}
func (m *InitiateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitiateRequest.Merge(m, src)
}
func (m *InitiateRequest) XXX_Size() int {
	return xxx_messageInfo_InitiateRequest.Size(m)
}
func (m *InitiateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitiateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitiateRequest proto.InternalMessageInfo

func (m *InitiateRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *InitiateRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *InitiateRequest) GetHostport() string {
	if m != nil {
		return m.Hostport
	}
	return ""
}

func (m *InitiateRequest) GetRpcuser() string {
	if m != nil {
		return m.Rpcuser
	}
	return ""
}

func (m *InitiateRequest) GetRpcpass() string {
	if m != nil {
		return m.Rpcpass
	}
	return ""
}

func (m *InitiateRequest) GetWpass() string {
	if m != nil {
		return m.Wpass
	}
	return ""
}

func (m *InitiateRequest) GetCerts() string {
	if m != nil {
		return m.Certs
	}
	return ""
}

func (m *InitiateRequest) GetSecrethash() string {
	if m != nil {
		return m.Secrethash
	}
	return ""
}

func (m *InitiateRequest) GetPartAddress() string {
	if m != nil {
		return m.PartAddress
	}
	return ""
}

func (m *InitiateRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type InitiateResponse struct {
	Contract             string   `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	ContractP2Sh         string   `protobuf:"bytes,6,opt,name=contract_p2sh,json=contractP2sh,proto3" json:"contract_p2sh,omitempty"`
	ContractTx           string   `protobuf:"bytes,7,opt,name=contract_tx,json=contractTx,proto3" json:"contract_tx,omitempty"`
	ContractTxHash       string   `protobuf:"bytes,8,opt,name=contract_tx_hash,json=contractTxHash,proto3" json:"contract_tx_hash,omitempty"`
	Fee                  int64    `protobuf:"varint,9,opt,name=fee,proto3" json:"fee,omitempty"`
	Feerate              float32  `protobuf:"fixed32,10,opt,name=feerate,proto3" json:"feerate,omitempty"`
	Locktime             int64    `protobuf:"varint,11,opt,name=locktime,proto3" json:"locktime,omitempty"`
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitiateResponse) Reset()         { *m = InitiateResponse{} }
func (m *InitiateResponse) String() string { return proto.CompactTextString(m) }
func (*InitiateResponse) ProtoMessage()    {}
func (*InitiateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{5}
}

func (m *InitiateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitiateResponse.Unmarshal(m, b)
}
func (m *InitiateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitiateResponse.Marshal(b, m, deterministic)
}
func (m *InitiateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitiateResponse.Merge(m, src)
}
func (m *InitiateResponse) XXX_Size() int {
	return xxx_messageInfo_InitiateResponse.Size(m)
}
func (m *InitiateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitiateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitiateResponse proto.InternalMessageInfo

func (m *InitiateResponse) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *InitiateResponse) GetContractP2Sh() string {
	if m != nil {
		return m.ContractP2Sh
	}
	return ""
}

func (m *InitiateResponse) GetContractTx() string {
	if m != nil {
		return m.ContractTx
	}
	return ""
}

func (m *InitiateResponse) GetContractTxHash() string {
	if m != nil {
		return m.ContractTxHash
	}
	return ""
}

func (m *InitiateResponse) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *InitiateResponse) GetFeerate() float32 {
	if m != nil {
		return m.Feerate
	}
	return 0
}

func (m *InitiateResponse) GetLocktime() int64 {
	if m != nil {
		return m.Locktime
	}
	return 0
}

func (m *InitiateResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *InitiateResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

type ParticipateRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	Hostport             string   `protobuf:"bytes,5,opt,name=hostport,proto3" json:"hostport,omitempty"`
	Rpcuser              string   `protobuf:"bytes,6,opt,name=rpcuser,proto3" json:"rpcuser,omitempty"`
	Rpcpass              string   `protobuf:"bytes,7,opt,name=rpcpass,proto3" json:"rpcpass,omitempty"`
	Wpass                string   `protobuf:"bytes,8,opt,name=wpass,proto3" json:"wpass,omitempty"`
	Certs                string   `protobuf:"bytes,9,opt,name=certs,proto3" json:"certs,omitempty"`
	Secrethash           string   `protobuf:"bytes,10,opt,name=secrethash,proto3" json:"secrethash,omitempty"`
	InitAddress          string   `protobuf:"bytes,11,opt,name=init_address,json=initAddress,proto3" json:"init_address,omitempty"`
	Amount               int64    `protobuf:"varint,12,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParticipateRequest) Reset()         { *m = ParticipateRequest{} }
func (m *ParticipateRequest) String() string { return proto.CompactTextString(m) }
func (*ParticipateRequest) ProtoMessage()    {}
func (*ParticipateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{6}
}

func (m *ParticipateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParticipateRequest.Unmarshal(m, b)
}
func (m *ParticipateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParticipateRequest.Marshal(b, m, deterministic)
}
func (m *ParticipateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipateRequest.Merge(m, src)
}
func (m *ParticipateRequest) XXX_Size() int {
	return xxx_messageInfo_ParticipateRequest.Size(m)
}
func (m *ParticipateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipateRequest proto.InternalMessageInfo

func (m *ParticipateRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *ParticipateRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *ParticipateRequest) GetHostport() string {
	if m != nil {
		return m.Hostport
	}
	return ""
}

func (m *ParticipateRequest) GetRpcuser() string {
	if m != nil {
		return m.Rpcuser
	}
	return ""
}

func (m *ParticipateRequest) GetRpcpass() string {
	if m != nil {
		return m.Rpcpass
	}
	return ""
}

func (m *ParticipateRequest) GetWpass() string {
	if m != nil {
		return m.Wpass
	}
	return ""
}

func (m *ParticipateRequest) GetCerts() string {
	if m != nil {
		return m.Certs
	}
	return ""
}

func (m *ParticipateRequest) GetSecrethash() string {
	if m != nil {
		return m.Secrethash
	}
	return ""
}

func (m *ParticipateRequest) GetInitAddress() string {
	if m != nil {
		return m.InitAddress
	}
	return ""
}

func (m *ParticipateRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type ParticipateResponse struct {
	Contract             string   `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	ContractP2Sh         string   `protobuf:"bytes,6,opt,name=contract_p2sh,json=contractP2sh,proto3" json:"contract_p2sh,omitempty"`
	ContractTx           string   `protobuf:"bytes,7,opt,name=contract_tx,json=contractTx,proto3" json:"contract_tx,omitempty"`
	ContractTxHash       string   `protobuf:"bytes,8,opt,name=contract_tx_hash,json=contractTxHash,proto3" json:"contract_tx_hash,omitempty"`
	Fee                  int64    `protobuf:"varint,9,opt,name=fee,proto3" json:"fee,omitempty"`
	Feerate              float32  `protobuf:"fixed32,10,opt,name=feerate,proto3" json:"feerate,omitempty"`
	Locktime             int64    `protobuf:"varint,11,opt,name=locktime,proto3" json:"locktime,omitempty"`
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParticipateResponse) Reset()         { *m = ParticipateResponse{} }
func (m *ParticipateResponse) String() string { return proto.CompactTextString(m) }
func (*ParticipateResponse) ProtoMessage()    {}
func (*ParticipateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{7}
}

func (m *ParticipateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParticipateResponse.Unmarshal(m, b)
}
func (m *ParticipateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParticipateResponse.Marshal(b, m, deterministic)
}
func (m *ParticipateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParticipateResponse.Merge(m, src)
}
func (m *ParticipateResponse) XXX_Size() int {
	return xxx_messageInfo_ParticipateResponse.Size(m)
}
func (m *ParticipateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ParticipateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ParticipateResponse proto.InternalMessageInfo

func (m *ParticipateResponse) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *ParticipateResponse) GetContractP2Sh() string {
	if m != nil {
		return m.ContractP2Sh
	}
	return ""
}

func (m *ParticipateResponse) GetContractTx() string {
	if m != nil {
		return m.ContractTx
	}
	return ""
}

func (m *ParticipateResponse) GetContractTxHash() string {
	if m != nil {
		return m.ContractTxHash
	}
	return ""
}

func (m *ParticipateResponse) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *ParticipateResponse) GetFeerate() float32 {
	if m != nil {
		return m.Feerate
	}
	return 0
}

func (m *ParticipateResponse) GetLocktime() int64 {
	if m != nil {
		return m.Locktime
	}
	return 0
}

func (m *ParticipateResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *ParticipateResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

type RedeemRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	Hostport             string   `protobuf:"bytes,5,opt,name=hostport,proto3" json:"hostport,omitempty"`
	Rpcuser              string   `protobuf:"bytes,6,opt,name=rpcuser,proto3" json:"rpcuser,omitempty"`
	Rpcpass              string   `protobuf:"bytes,7,opt,name=rpcpass,proto3" json:"rpcpass,omitempty"`
	Wpass                string   `protobuf:"bytes,8,opt,name=wpass,proto3" json:"wpass,omitempty"`
	Certs                string   `protobuf:"bytes,9,opt,name=certs,proto3" json:"certs,omitempty"`
	Secret               string   `protobuf:"bytes,10,opt,name=secret,proto3" json:"secret,omitempty"`
	Contract             string   `protobuf:"bytes,11,opt,name=contract,proto3" json:"contract,omitempty"`
	ContractTx           uint64   `protobuf:"varint,12,opt,name=contract_tx,json=contractTx,proto3" json:"contract_tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedeemRequest) Reset()         { *m = RedeemRequest{} }
func (m *RedeemRequest) String() string { return proto.CompactTextString(m) }
func (*RedeemRequest) ProtoMessage()    {}
func (*RedeemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{8}
}

func (m *RedeemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedeemRequest.Unmarshal(m, b)
}
func (m *RedeemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedeemRequest.Marshal(b, m, deterministic)
}
func (m *RedeemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedeemRequest.Merge(m, src)
}
func (m *RedeemRequest) XXX_Size() int {
	return xxx_messageInfo_RedeemRequest.Size(m)
}
func (m *RedeemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RedeemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RedeemRequest proto.InternalMessageInfo

func (m *RedeemRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *RedeemRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *RedeemRequest) GetHostport() string {
	if m != nil {
		return m.Hostport
	}
	return ""
}

func (m *RedeemRequest) GetRpcuser() string {
	if m != nil {
		return m.Rpcuser
	}
	return ""
}

func (m *RedeemRequest) GetRpcpass() string {
	if m != nil {
		return m.Rpcpass
	}
	return ""
}

func (m *RedeemRequest) GetWpass() string {
	if m != nil {
		return m.Wpass
	}
	return ""
}

func (m *RedeemRequest) GetCerts() string {
	if m != nil {
		return m.Certs
	}
	return ""
}

func (m *RedeemRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *RedeemRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *RedeemRequest) GetContractTx() uint64 {
	if m != nil {
		return m.ContractTx
	}
	return 0
}

type RedeemResponse struct {
	RedeemTx             string   `protobuf:"bytes,5,opt,name=redeem_tx,json=redeemTx,proto3" json:"redeem_tx,omitempty"`
	RedeemTxHash         string   `protobuf:"bytes,6,opt,name=redeem_tx_hash,json=redeemTxHash,proto3" json:"redeem_tx_hash,omitempty"`
	Fee                  int64    `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Feerate              float32  `protobuf:"fixed32,8,opt,name=feerate,proto3" json:"feerate,omitempty"`
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedeemResponse) Reset()         { *m = RedeemResponse{} }
func (m *RedeemResponse) String() string { return proto.CompactTextString(m) }
func (*RedeemResponse) ProtoMessage()    {}
func (*RedeemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{9}
}

func (m *RedeemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedeemResponse.Unmarshal(m, b)
}
func (m *RedeemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedeemResponse.Marshal(b, m, deterministic)
}
func (m *RedeemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedeemResponse.Merge(m, src)
}
func (m *RedeemResponse) XXX_Size() int {
	return xxx_messageInfo_RedeemResponse.Size(m)
}
func (m *RedeemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RedeemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RedeemResponse proto.InternalMessageInfo

func (m *RedeemResponse) GetRedeemTx() string {
	if m != nil {
		return m.RedeemTx
	}
	return ""
}

func (m *RedeemResponse) GetRedeemTxHash() string {
	if m != nil {
		return m.RedeemTxHash
	}
	return ""
}

func (m *RedeemResponse) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *RedeemResponse) GetFeerate() float32 {
	if m != nil {
		return m.Feerate
	}
	return 0
}

func (m *RedeemResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *RedeemResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

type RefundRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	Hostport             string   `protobuf:"bytes,5,opt,name=hostport,proto3" json:"hostport,omitempty"`
	Rpcuser              string   `protobuf:"bytes,6,opt,name=rpcuser,proto3" json:"rpcuser,omitempty"`
	Rpcpass              string   `protobuf:"bytes,7,opt,name=rpcpass,proto3" json:"rpcpass,omitempty"`
	Wpass                string   `protobuf:"bytes,8,opt,name=wpass,proto3" json:"wpass,omitempty"`
	Certs                string   `protobuf:"bytes,9,opt,name=certs,proto3" json:"certs,omitempty"`
	Contract             string   `protobuf:"bytes,10,opt,name=contract,proto3" json:"contract,omitempty"`
	ContractTx           uint64   `protobuf:"varint,11,opt,name=contract_tx,json=contractTx,proto3" json:"contract_tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundRequest) Reset()         { *m = RefundRequest{} }
func (m *RefundRequest) String() string { return proto.CompactTextString(m) }
func (*RefundRequest) ProtoMessage()    {}
func (*RefundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{10}
}

func (m *RefundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundRequest.Unmarshal(m, b)
}
func (m *RefundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundRequest.Marshal(b, m, deterministic)
}
func (m *RefundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundRequest.Merge(m, src)
}
func (m *RefundRequest) XXX_Size() int {
	return xxx_messageInfo_RefundRequest.Size(m)
}
func (m *RefundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefundRequest proto.InternalMessageInfo

func (m *RefundRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *RefundRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *RefundRequest) GetHostport() string {
	if m != nil {
		return m.Hostport
	}
	return ""
}

func (m *RefundRequest) GetRpcuser() string {
	if m != nil {
		return m.Rpcuser
	}
	return ""
}

func (m *RefundRequest) GetRpcpass() string {
	if m != nil {
		return m.Rpcpass
	}
	return ""
}

func (m *RefundRequest) GetWpass() string {
	if m != nil {
		return m.Wpass
	}
	return ""
}

func (m *RefundRequest) GetCerts() string {
	if m != nil {
		return m.Certs
	}
	return ""
}

func (m *RefundRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *RefundRequest) GetContractTx() uint64 {
	if m != nil {
		return m.ContractTx
	}
	return 0
}

type RefundResponse struct {
	RefundTx             string   `protobuf:"bytes,5,opt,name=refund_tx,json=refundTx,proto3" json:"refund_tx,omitempty"`
	RefundTxHash         string   `protobuf:"bytes,6,opt,name=refund_tx_hash,json=refundTxHash,proto3" json:"refund_tx_hash,omitempty"`
	Fee                  int64    `protobuf:"varint,7,opt,name=fee,proto3" json:"fee,omitempty"`
	Feerate              float32  `protobuf:"fixed32,8,opt,name=feerate,proto3" json:"feerate,omitempty"`
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundResponse) Reset()         { *m = RefundResponse{} }
func (m *RefundResponse) String() string { return proto.CompactTextString(m) }
func (*RefundResponse) ProtoMessage()    {}
func (*RefundResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{11}
}

func (m *RefundResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundResponse.Unmarshal(m, b)
}
func (m *RefundResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundResponse.Marshal(b, m, deterministic)
}
func (m *RefundResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundResponse.Merge(m, src)
}
func (m *RefundResponse) XXX_Size() int {
	return xxx_messageInfo_RefundResponse.Size(m)
}
func (m *RefundResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefundResponse proto.InternalMessageInfo

func (m *RefundResponse) GetRefundTx() string {
	if m != nil {
		return m.RefundTx
	}
	return ""
}

func (m *RefundResponse) GetRefundTxHash() string {
	if m != nil {
		return m.RefundTxHash
	}
	return ""
}

func (m *RefundResponse) GetFee() int64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *RefundResponse) GetFeerate() float32 {
	if m != nil {
		return m.Feerate
	}
	return 0
}

func (m *RefundResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *RefundResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

type PublishRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	Hostport             string   `protobuf:"bytes,5,opt,name=hostport,proto3" json:"hostport,omitempty"`
	Rpcuser              string   `protobuf:"bytes,6,opt,name=rpcuser,proto3" json:"rpcuser,omitempty"`
	Rpcpass              string   `protobuf:"bytes,7,opt,name=rpcpass,proto3" json:"rpcpass,omitempty"`
	Wpass                string   `protobuf:"bytes,8,opt,name=wpass,proto3" json:"wpass,omitempty"`
	Certs                string   `protobuf:"bytes,9,opt,name=certs,proto3" json:"certs,omitempty"`
	Tx                   string   `protobuf:"bytes,10,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishRequest) Reset()         { *m = PublishRequest{} }
func (m *PublishRequest) String() string { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()    {}
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{12}
}

func (m *PublishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishRequest.Unmarshal(m, b)
}
func (m *PublishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishRequest.Marshal(b, m, deterministic)
}
func (m *PublishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishRequest.Merge(m, src)
}
func (m *PublishRequest) XXX_Size() int {
	return xxx_messageInfo_PublishRequest.Size(m)
}
func (m *PublishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishRequest proto.InternalMessageInfo

func (m *PublishRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *PublishRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *PublishRequest) GetHostport() string {
	if m != nil {
		return m.Hostport
	}
	return ""
}

func (m *PublishRequest) GetRpcuser() string {
	if m != nil {
		return m.Rpcuser
	}
	return ""
}

func (m *PublishRequest) GetRpcpass() string {
	if m != nil {
		return m.Rpcpass
	}
	return ""
}

func (m *PublishRequest) GetWpass() string {
	if m != nil {
		return m.Wpass
	}
	return ""
}

func (m *PublishRequest) GetCerts() string {
	if m != nil {
		return m.Certs
	}
	return ""
}

func (m *PublishRequest) GetTx() string {
	if m != nil {
		return m.Tx
	}
	return ""
}

type PublishResponse struct {
	TxHash               string   `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishResponse) Reset()         { *m = PublishResponse{} }
func (m *PublishResponse) String() string { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()    {}
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{13}
}

func (m *PublishResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishResponse.Unmarshal(m, b)
}
func (m *PublishResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishResponse.Marshal(b, m, deterministic)
}
func (m *PublishResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResponse.Merge(m, src)
}
func (m *PublishResponse) XXX_Size() int {
	return xxx_messageInfo_PublishResponse.Size(m)
}
func (m *PublishResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResponse proto.InternalMessageInfo

func (m *PublishResponse) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *PublishResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *PublishResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

type ExtractSecretRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	CpRedemptionTx       string   `protobuf:"bytes,5,opt,name=cp_redemption_tx,json=cpRedemptionTx,proto3" json:"cp_redemption_tx,omitempty"`
	Secrethash           string   `protobuf:"bytes,6,opt,name=secrethash,proto3" json:"secrethash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtractSecretRequest) Reset()         { *m = ExtractSecretRequest{} }
func (m *ExtractSecretRequest) String() string { return proto.CompactTextString(m) }
func (*ExtractSecretRequest) ProtoMessage()    {}
func (*ExtractSecretRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{14}
}

func (m *ExtractSecretRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtractSecretRequest.Unmarshal(m, b)
}
func (m *ExtractSecretRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtractSecretRequest.Marshal(b, m, deterministic)
}
func (m *ExtractSecretRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtractSecretRequest.Merge(m, src)
}
func (m *ExtractSecretRequest) XXX_Size() int {
	return xxx_messageInfo_ExtractSecretRequest.Size(m)
}
func (m *ExtractSecretRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtractSecretRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExtractSecretRequest proto.InternalMessageInfo

func (m *ExtractSecretRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *ExtractSecretRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *ExtractSecretRequest) GetCpRedemptionTx() string {
	if m != nil {
		return m.CpRedemptionTx
	}
	return ""
}

func (m *ExtractSecretRequest) GetSecrethash() string {
	if m != nil {
		return m.Secrethash
	}
	return ""
}

type ExtractSecretResponse struct {
	Secret               string   `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtractSecretResponse) Reset()         { *m = ExtractSecretResponse{} }
func (m *ExtractSecretResponse) String() string { return proto.CompactTextString(m) }
func (*ExtractSecretResponse) ProtoMessage()    {}
func (*ExtractSecretResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{15}
}

func (m *ExtractSecretResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtractSecretResponse.Unmarshal(m, b)
}
func (m *ExtractSecretResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtractSecretResponse.Marshal(b, m, deterministic)
}
func (m *ExtractSecretResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtractSecretResponse.Merge(m, src)
}
func (m *ExtractSecretResponse) XXX_Size() int {
	return xxx_messageInfo_ExtractSecretResponse.Size(m)
}
func (m *ExtractSecretResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtractSecretResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExtractSecretResponse proto.InternalMessageInfo

func (m *ExtractSecretResponse) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *ExtractSecretResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *ExtractSecretResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

type AuditRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	Contract             string   `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	ContractTx           uint64   `protobuf:"varint,6,opt,name=contract_tx,json=contractTx,proto3" json:"contract_tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuditRequest) Reset()         { *m = AuditRequest{} }
func (m *AuditRequest) String() string { return proto.CompactTextString(m) }
func (*AuditRequest) ProtoMessage()    {}
func (*AuditRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{16}
}

func (m *AuditRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditRequest.Unmarshal(m, b)
}
func (m *AuditRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditRequest.Marshal(b, m, deterministic)
}
func (m *AuditRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditRequest.Merge(m, src)
}
func (m *AuditRequest) XXX_Size() int {
	return xxx_messageInfo_AuditRequest.Size(m)
}
func (m *AuditRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuditRequest proto.InternalMessageInfo

func (m *AuditRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *AuditRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *AuditRequest) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *AuditRequest) GetContractTx() uint64 {
	if m != nil {
		return m.ContractTx
	}
	return 0
}

type AuditResponse struct {
	ContractAmount       int64    `protobuf:"varint,5,opt,name=contract_amount,json=contractAmount,proto3" json:"contract_amount,omitempty"`
	ContractAddress      string   `protobuf:"bytes,6,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	ContractSecrethash   string   `protobuf:"bytes,7,opt,name=contract_secrethash,json=contractSecrethash,proto3" json:"contract_secrethash,omitempty"`
	RecipientAddress     string   `protobuf:"bytes,8,opt,name=recipient_address,json=recipientAddress,proto3" json:"recipient_address,omitempty"`
	RefundAddress        string   `protobuf:"bytes,9,opt,name=refund_address,json=refundAddress,proto3" json:"refund_address,omitempty"`
	RefundLocktime       uint64   `protobuf:"varint,10,opt,name=refund_locktime,json=refundLocktime,proto3" json:"refund_locktime,omitempty"`
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuditResponse) Reset()         { *m = AuditResponse{} }
func (m *AuditResponse) String() string { return proto.CompactTextString(m) }
func (*AuditResponse) ProtoMessage()    {}
func (*AuditResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{17}
}

func (m *AuditResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditResponse.Unmarshal(m, b)
}
func (m *AuditResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditResponse.Marshal(b, m, deterministic)
}
func (m *AuditResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditResponse.Merge(m, src)
}
func (m *AuditResponse) XXX_Size() int {
	return xxx_messageInfo_AuditResponse.Size(m)
}
func (m *AuditResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuditResponse proto.InternalMessageInfo

func (m *AuditResponse) GetContractAmount() int64 {
	if m != nil {
		return m.ContractAmount
	}
	return 0
}

func (m *AuditResponse) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *AuditResponse) GetContractSecrethash() string {
	if m != nil {
		return m.ContractSecrethash
	}
	return ""
}

func (m *AuditResponse) GetRecipientAddress() string {
	if m != nil {
		return m.RecipientAddress
	}
	return ""
}

func (m *AuditResponse) GetRefundAddress() string {
	if m != nil {
		return m.RefundAddress
	}
	return ""
}

func (m *AuditResponse) GetRefundLocktime() uint64 {
	if m != nil {
		return m.RefundLocktime
	}
	return 0
}

func (m *AuditResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *AuditResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

type GetTxRequest struct {
	Coin                 COIN     `protobuf:"varint,1,opt,name=coin,proto3,enum=protobind.COIN" json:"coin,omitempty"`
	Testnet              bool     `protobuf:"varint,2,opt,name=testnet,proto3" json:"testnet,omitempty"`
	Hostport             string   `protobuf:"bytes,5,opt,name=hostport,proto3" json:"hostport,omitempty"`
	Rpcuser              string   `protobuf:"bytes,6,opt,name=rpcuser,proto3" json:"rpcuser,omitempty"`
	Rpcpass              string   `protobuf:"bytes,7,opt,name=rpcpass,proto3" json:"rpcpass,omitempty"`
	Wpass                string   `protobuf:"bytes,8,opt,name=wpass,proto3" json:"wpass,omitempty"`
	Certs                string   `protobuf:"bytes,9,opt,name=certs,proto3" json:"certs,omitempty"`
	Txid                 string   `protobuf:"bytes,10,opt,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTxRequest) Reset()         { *m = GetTxRequest{} }
func (m *GetTxRequest) String() string { return proto.CompactTextString(m) }
func (*GetTxRequest) ProtoMessage()    {}
func (*GetTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{18}
}

func (m *GetTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTxRequest.Unmarshal(m, b)
}
func (m *GetTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTxRequest.Marshal(b, m, deterministic)
}
func (m *GetTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTxRequest.Merge(m, src)
}
func (m *GetTxRequest) XXX_Size() int {
	return xxx_messageInfo_GetTxRequest.Size(m)
}
func (m *GetTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTxRequest proto.InternalMessageInfo

func (m *GetTxRequest) GetCoin() COIN {
	if m != nil {
		return m.Coin
	}
	return COIN_BTC
}

func (m *GetTxRequest) GetTestnet() bool {
	if m != nil {
		return m.Testnet
	}
	return false
}

func (m *GetTxRequest) GetHostport() string {
	if m != nil {
		return m.Hostport
	}
	return ""
}

func (m *GetTxRequest) GetRpcuser() string {
	if m != nil {
		return m.Rpcuser
	}
	return ""
}

func (m *GetTxRequest) GetRpcpass() string {
	if m != nil {
		return m.Rpcpass
	}
	return ""
}

func (m *GetTxRequest) GetWpass() string {
	if m != nil {
		return m.Wpass
	}
	return ""
}

func (m *GetTxRequest) GetCerts() string {
	if m != nil {
		return m.Certs
	}
	return ""
}

func (m *GetTxRequest) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

type GetTxResponse struct {
	Confirmations        uint64   `protobuf:"varint,5,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Blockhash            string   `protobuf:"bytes,6,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	Blockindex           int32    `protobuf:"varint,7,opt,name=blockindex,proto3" json:"blockindex,omitempty"`
	Blocktime            uint64   `protobuf:"varint,8,opt,name=blocktime,proto3" json:"blocktime,omitempty"`
	Time                 uint64   `protobuf:"varint,9,opt,name=time,proto3" json:"time,omitempty"`
	TimeReceived         uint64   `protobuf:"varint,10,opt,name=time_received,json=timeReceived,proto3" json:"time_received,omitempty"`
	Hex                  string   `protobuf:"bytes,11,opt,name=hex,proto3" json:"hex,omitempty"`
	Errorno              ERRNO    `protobuf:"varint,14,opt,name=errorno,proto3,enum=protobind.ERRNO" json:"errorno,omitempty"`
	Errstr               string   `protobuf:"bytes,15,opt,name=errstr,proto3" json:"errstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTxResponse) Reset()         { *m = GetTxResponse{} }
func (m *GetTxResponse) String() string { return proto.CompactTextString(m) }
func (*GetTxResponse) ProtoMessage()    {}
func (*GetTxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9afe1911bb3b5204, []int{19}
}

func (m *GetTxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTxResponse.Unmarshal(m, b)
}
func (m *GetTxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTxResponse.Marshal(b, m, deterministic)
}
func (m *GetTxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTxResponse.Merge(m, src)
}
func (m *GetTxResponse) XXX_Size() int {
	return xxx_messageInfo_GetTxResponse.Size(m)
}
func (m *GetTxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTxResponse proto.InternalMessageInfo

func (m *GetTxResponse) GetConfirmations() uint64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *GetTxResponse) GetBlockhash() string {
	if m != nil {
		return m.Blockhash
	}
	return ""
}

func (m *GetTxResponse) GetBlockindex() int32 {
	if m != nil {
		return m.Blockindex
	}
	return 0
}

func (m *GetTxResponse) GetBlocktime() uint64 {
	if m != nil {
		return m.Blocktime
	}
	return 0
}

func (m *GetTxResponse) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *GetTxResponse) GetTimeReceived() uint64 {
	if m != nil {
		return m.TimeReceived
	}
	return 0
}

func (m *GetTxResponse) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *GetTxResponse) GetErrorno() ERRNO {
	if m != nil {
		return m.Errorno
	}
	return ERRNO_OK
}

func (m *GetTxResponse) GetErrstr() string {
	if m != nil {
		return m.Errstr
	}
	return ""
}

func init() {
	proto.RegisterEnum("protobind.COIN", COIN_name, COIN_value)
	proto.RegisterEnum("protobind.ERRNO", ERRNO_name, ERRNO_value)
	proto.RegisterType((*PingWalletRPCRequest)(nil), "protobind.PingWalletRPCRequest")
	proto.RegisterType((*PingWalletRPCResponse)(nil), "protobind.PingWalletRPCResponse")
	proto.RegisterType((*NewAddressRequest)(nil), "protobind.NewAddressRequest")
	proto.RegisterType((*NewAddressResponse)(nil), "protobind.NewAddressResponse")
	proto.RegisterType((*InitiateRequest)(nil), "protobind.InitiateRequest")
	proto.RegisterType((*InitiateResponse)(nil), "protobind.InitiateResponse")
	proto.RegisterType((*ParticipateRequest)(nil), "protobind.ParticipateRequest")
	proto.RegisterType((*ParticipateResponse)(nil), "protobind.ParticipateResponse")
	proto.RegisterType((*RedeemRequest)(nil), "protobind.RedeemRequest")
	proto.RegisterType((*RedeemResponse)(nil), "protobind.RedeemResponse")
	proto.RegisterType((*RefundRequest)(nil), "protobind.RefundRequest")
	proto.RegisterType((*RefundResponse)(nil), "protobind.RefundResponse")
	proto.RegisterType((*PublishRequest)(nil), "protobind.PublishRequest")
	proto.RegisterType((*PublishResponse)(nil), "protobind.PublishResponse")
	proto.RegisterType((*ExtractSecretRequest)(nil), "protobind.ExtractSecretRequest")
	proto.RegisterType((*ExtractSecretResponse)(nil), "protobind.ExtractSecretResponse")
	proto.RegisterType((*AuditRequest)(nil), "protobind.AuditRequest")
	proto.RegisterType((*AuditResponse)(nil), "protobind.AuditResponse")
	proto.RegisterType((*GetTxRequest)(nil), "protobind.GetTxRequest")
	proto.RegisterType((*GetTxResponse)(nil), "protobind.GetTxResponse")
}

func init() { proto.RegisterFile("atomicswap.proto", fileDescriptor_9afe1911bb3b5204) }

var fileDescriptor_9afe1911bb3b5204 = []byte{
	// 1171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xdd, 0x6e, 0xdc, 0xc4,
	0x17, 0xaf, 0xbd, 0xdf, 0x67, 0xbf, 0xdc, 0x69, 0xda, 0xfa, 0xef, 0xf6, 0xdf, 0x86, 0x6d, 0x51,
	0x43, 0x90, 0x82, 0x14, 0xee, 0x90, 0x90, 0x48, 0xb7, 0x11, 0x44, 0x44, 0xc9, 0x6a, 0xb2, 0x15,
	0x08, 0x2e, 0x22, 0xc7, 0x3b, 0x61, 0x47, 0x64, 0x6d, 0x33, 0x9e, 0x25, 0x7e, 0x03, 0x24, 0x5e,
	0x02, 0xee, 0x90, 0x2a, 0xf1, 0x14, 0x5c, 0x70, 0x87, 0xc4, 0x05, 0x57, 0x88, 0x77, 0x41, 0x33,
	0x9e, 0xb1, 0xc7, 0xce, 0xa6, 0xdc, 0xac, 0x84, 0x08, 0x5c, 0x65, 0xce, 0xd7, 0x64, 0xce, 0xef,
	0x77, 0x66, 0xce, 0xf1, 0x82, 0xe3, 0xf3, 0x68, 0x41, 0x83, 0xe4, 0xd2, 0x8f, 0x77, 0x62, 0x16,
	0xf1, 0x08, 0x75, 0xe4, 0x9f, 0x33, 0x1a, 0xce, 0x46, 0xbf, 0x5a, 0xb0, 0x31, 0xa1, 0xe1, 0x17,
	0x9f, 0xf8, 0x17, 0x17, 0x84, 0xe3, 0xc9, 0x18, 0x93, 0xaf, 0x96, 0x24, 0xe1, 0xe8, 0x09, 0xd4,
	0x83, 0x88, 0x86, 0xae, 0xb5, 0x69, 0x6d, 0x0d, 0x76, 0x87, 0x3b, 0x79, 0xc8, 0xce, 0xf8, 0xf8,
	0xe0, 0x08, 0x4b, 0x23, 0x72, 0xa1, 0xc5, 0x49, 0xc2, 0x43, 0xc2, 0x5d, 0x7b, 0xd3, 0xda, 0x6a,
	0x63, 0x2d, 0x22, 0x0f, 0xda, 0xf3, 0x28, 0xe1, 0x71, 0xc4, 0xb8, 0xdb, 0xd8, 0xb4, 0xb6, 0x3a,
	0x38, 0x97, 0x45, 0x14, 0x8b, 0x83, 0x65, 0x42, 0x98, 0xdb, 0x94, 0x26, 0x2d, 0x2a, 0x4b, 0xec,
	0x27, 0x89, 0xdb, 0xca, 0x2d, 0x42, 0x44, 0x1b, 0xd0, 0xb8, 0x94, 0xfa, 0xb6, 0xd4, 0x67, 0x82,
	0xd0, 0x06, 0x84, 0xf1, 0xc4, 0xed, 0x64, 0x5a, 0x29, 0x8c, 0x3e, 0x87, 0xbb, 0x95, 0x94, 0x92,
	0x38, 0x0a, 0x13, 0x82, 0xb6, 0xa1, 0x45, 0x18, 0x8b, 0x58, 0x18, 0xb9, 0x03, 0x99, 0x96, 0x63,
	0xa4, 0xb5, 0x8f, 0xf1, 0xd1, 0x31, 0xd6, 0x0e, 0xe8, 0x1e, 0x34, 0x09, 0x63, 0x09, 0x67, 0xee,
	0x50, 0xee, 0xad, 0xa4, 0xd1, 0x2f, 0x16, 0xdc, 0x3e, 0x22, 0x97, 0x7b, 0xb3, 0x19, 0x23, 0x49,
	0x72, 0x03, 0xd0, 0x62, 0x80, 0xcc, 0x7c, 0x14, 0x54, 0x2e, 0xb4, 0xfc, 0x4c, 0xa5, 0x0e, 0xa4,
	0xc5, 0xb5, 0x80, 0xf8, 0x83, 0x0d, 0xc3, 0x83, 0x90, 0x72, 0xea, 0x73, 0xf2, 0xcf, 0x87, 0x10,
	0x3d, 0x02, 0x48, 0x48, 0xc0, 0x08, 0x9f, 0xfb, 0xc9, 0xdc, 0x05, 0x69, 0x32, 0x34, 0xe8, 0x0d,
	0xe8, 0xc5, 0x3e, 0xe3, 0xa7, 0x1a, 0xd1, 0xae, 0xf4, 0xe8, 0x0a, 0x9d, 0xc2, 0x5d, 0x20, 0xe5,
	0x2f, 0xa2, 0x65, 0xc8, 0xdd, 0xde, 0xa6, 0xb5, 0x55, 0xc3, 0x4a, 0x1a, 0xbd, 0xb2, 0xc1, 0x29,
	0x90, 0x52, 0xe4, 0x78, 0xd0, 0x0e, 0xa2, 0x90, 0x33, 0x3f, 0xc8, 0x73, 0xd5, 0x32, 0x7a, 0x02,
	0x7d, 0xbd, 0x3e, 0x8d, 0x77, 0x93, 0xb9, 0xca, 0xb8, 0xa7, 0x95, 0x93, 0xdd, 0x64, 0x8e, 0x1e,
	0x43, 0x37, 0x77, 0xe2, 0xa9, 0x4a, 0x1d, 0xb4, 0x6a, 0x9a, 0xa2, 0x2d, 0x70, 0x0c, 0x87, 0x53,
	0x99, 0x57, 0x06, 0xc4, 0xa0, 0xf0, 0xfa, 0x48, 0xe4, 0xe6, 0x40, 0xed, 0x9c, 0x10, 0x89, 0x47,
	0x0d, 0x8b, 0xa5, 0xc0, 0xf4, 0x9c, 0x10, 0xe6, 0x73, 0x22, 0xa1, 0xb0, 0xb1, 0x16, 0xc5, 0xb9,
	0x2f, 0xa2, 0xe0, 0x4b, 0x4e, 0x17, 0x44, 0x62, 0x50, 0xc3, 0xb9, 0xbc, 0x96, 0xb2, 0x7a, 0x65,
	0x03, 0x9a, 0xf8, 0x8c, 0xd3, 0x80, 0xc6, 0xff, 0x9a, 0xca, 0xa2, 0x21, 0xbd, 0x52, 0x59, 0x42,
	0xf7, 0x57, 0x95, 0xf5, 0xa3, 0x0d, 0x77, 0x4a, 0x60, 0xfd, 0x57, 0x5c, 0xaf, 0x2d, 0xae, 0xef,
	0x6c, 0xe8, 0x63, 0x32, 0x23, 0x64, 0x71, 0x03, 0xea, 0xea, 0x1e, 0x34, 0xb3, 0x2a, 0x52, 0x35,
	0xa5, 0xa4, 0x12, 0xf9, 0xdd, 0x0a, 0xf9, 0x15, 0x5e, 0x45, 0x35, 0xd5, 0x4d, 0x5e, 0x47, 0x3f,
	0x59, 0x30, 0xd0, 0x08, 0xa9, 0x62, 0x7a, 0x00, 0x1d, 0x26, 0x35, 0x22, 0x42, 0x25, 0x99, 0x29,
	0xa6, 0x29, 0x7a, 0x0a, 0x83, 0xdc, 0x98, 0x55, 0x81, 0x2a, 0x27, 0xed, 0x61, 0xd6, 0x40, 0x6b,
	0x65, 0x0d, 0xb4, 0xcb, 0x35, 0xb0, 0x0e, 0x9e, 0xbf, 0x91, 0x3c, 0x9f, 0x2f, 0xc3, 0xd9, 0x0d,
	0xe0, 0xd9, 0xe4, 0x13, 0x5e, 0xcf, 0x67, 0xf7, 0x1a, 0x3e, 0x33, 0x24, 0x4c, 0x3e, 0x85, 0xa6,
	0xc4, 0xa7, 0x50, 0x68, 0x3e, 0x95, 0xb1, 0xc2, 0x67, 0xe6, 0xf1, 0xb7, 0xf0, 0xf9, 0xbb, 0x05,
	0x83, 0xc9, 0xf2, 0xec, 0x82, 0x26, 0xf3, 0x1b, 0x40, 0xe8, 0x00, 0x6c, 0x9e, 0x2a, 0x2a, 0x6d,
	0x9e, 0x8e, 0x42, 0x18, 0xe6, 0xc9, 0x29, 0x8e, 0xee, 0x43, 0x4b, 0xe3, 0x9f, 0x9d, 0xae, 0xc9,
	0x33, 0xe4, 0xd7, 0xf2, 0x0a, 0x5a, 0xb0, 0xb1, 0x9f, 0xca, 0x0a, 0x39, 0x91, 0x4f, 0xc6, 0x9a,
	0x30, 0x15, 0x3d, 0x21, 0x3e, 0x15, 0x17, 0x7f, 0x11, 0x73, 0x1a, 0x85, 0x45, 0x7d, 0x0d, 0x82,
	0x18, 0xe7, 0xea, 0x69, 0x5a, 0x69, 0x89, 0xcd, 0x6a, 0x4b, 0x1c, 0x25, 0x70, 0xb7, 0x72, 0x40,
	0x85, 0x4b, 0xf1, 0xe6, 0x35, 0x4a, 0x6f, 0xde, 0x3a, 0x60, 0xf9, 0xd6, 0x82, 0xde, 0xde, 0x72,
	0x46, 0xf9, 0xfa, 0x4a, 0xec, 0xda, 0x26, 0x5c, 0xb9, 0xb7, 0xcd, 0x2b, 0xf7, 0xf6, 0x37, 0x1b,
	0xfa, 0xea, 0x30, 0x2a, 0xf5, 0x67, 0x30, 0xcc, 0x43, 0xd4, 0x30, 0xd0, 0x90, 0xf7, 0x2f, 0x6f,
	0xb8, 0x7b, 0x52, 0x8b, 0xde, 0x32, 0x5a, 0xb3, 0x9e, 0x29, 0x32, 0x88, 0xf3, 0x0d, 0xf4, 0x5c,
	0xf1, 0x0e, 0xdc, 0xc9, 0x5d, 0x0d, 0x42, 0xb2, 0xda, 0x46, 0xda, 0x74, 0x52, 0xcc, 0x2a, 0x6f,
	0xc3, 0x6d, 0x46, 0x02, 0x1a, 0x53, 0x12, 0x16, 0x9b, 0x67, 0x25, 0xef, 0xe4, 0x06, 0xbd, 0xfb,
	0x9b, 0xf9, 0x5b, 0xa2, 0x3d, 0xb3, 0x6b, 0xd0, 0xcf, 0xb4, 0xda, 0xed, 0x19, 0x0c, 0x95, 0x5b,
	0xde, 0xfb, 0x41, 0xe2, 0xa1, 0xa2, 0x0f, 0xd7, 0x39, 0x01, 0xfc, 0x61, 0x41, 0xef, 0x43, 0xc2,
	0xa7, 0xe9, 0x0d, 0x78, 0x47, 0x10, 0xd4, 0x79, 0x4a, 0x67, 0xea, 0x25, 0x91, 0xeb, 0xd1, 0xf7,
	0x36, 0xf4, 0x55, 0x7e, 0xaa, 0x6e, 0x9e, 0xca, 0x79, 0xef, 0x9c, 0xb2, 0x85, 0x2f, 0x6e, 0x5f,
	0xf6, 0x2d, 0x58, 0xc7, 0x65, 0x25, 0x7a, 0x08, 0x9d, 0x33, 0x01, 0xbf, 0x71, 0x21, 0x0b, 0x85,
	0xb8, 0xaf, 0x52, 0xa0, 0xe1, 0x8c, 0x64, 0xd3, 0x60, 0x03, 0x1b, 0x9a, 0x3c, 0x5a, 0x92, 0xd7,
	0x96, 0xfb, 0x17, 0x0a, 0x79, 0x4e, 0x61, 0xe8, 0x48, 0x83, 0x5c, 0x8b, 0x29, 0x54, 0xfc, 0x3d,
	0x65, 0x24, 0x20, 0xf4, 0x6b, 0x32, 0x53, 0x94, 0xf7, 0x84, 0x12, 0x2b, 0x9d, 0x68, 0x33, 0x73,
	0x92, 0xaa, 0x21, 0x46, 0x2c, 0xd7, 0x51, 0x02, 0xdb, 0xdb, 0x50, 0x17, 0xd4, 0xa2, 0x16, 0xd4,
	0x9e, 0x4f, 0xc7, 0xce, 0x2d, 0xb1, 0x38, 0x9c, 0x8e, 0x1d, 0x4b, 0x2c, 0x3e, 0xfd, 0x6c, 0xec,
	0xd8, 0x62, 0xf1, 0x62, 0x8c, 0x9d, 0xda, 0xf6, 0x36, 0x34, 0xe4, 0xae, 0xa8, 0x09, 0xf6, 0xf1,
	0xc7, 0xce, 0x2d, 0xd4, 0x86, 0xfa, 0xe1, 0xc1, 0xf3, 0x13, 0xc7, 0x42, 0x43, 0xe8, 0xbe, 0x3c,
	0x3a, 0x79, 0x39, 0x99, 0x1c, 0xe3, 0xe9, 0xfe, 0x0b, 0xc7, 0xde, 0xfd, 0xb9, 0x01, 0xad, 0x93,
	0x4b, 0x3f, 0x3e, 0xa4, 0x67, 0x08, 0x43, 0xbf, 0xf4, 0xf3, 0x05, 0x7a, 0x6c, 0x9c, 0x73, 0xd5,
	0x6f, 0x35, 0xde, 0xe6, 0xf5, 0x0e, 0x8a, 0xc8, 0x03, 0x80, 0xe2, 0x23, 0x1f, 0x3d, 0x34, 0xfc,
	0xaf, 0xfc, 0x96, 0xe1, 0xfd, 0xff, 0x1a, 0xab, 0xda, 0x6a, 0x0c, 0x6d, 0xfd, 0x41, 0x8a, 0x3c,
	0xc3, 0xb5, 0xf2, 0x3d, 0xef, 0x3d, 0x58, 0x69, 0x53, 0x9b, 0x1c, 0x42, 0xd7, 0xf8, 0xf6, 0x40,
	0xe6, 0xbf, 0xbc, 0xfa, 0x01, 0xe7, 0x3d, 0xba, 0xce, 0xac, 0x76, 0x7b, 0x1f, 0x9a, 0xd9, 0xdc,
	0x89, 0x5c, 0xc3, 0xb3, 0x34, 0xac, 0x7b, 0xff, 0x5b, 0x61, 0x31, 0xc3, 0xc5, 0x6b, 0x51, 0x09,
	0x37, 0x66, 0xc0, 0x4a, 0x78, 0x69, 0x26, 0xfa, 0x00, 0x5a, 0xaa, 0x05, 0x23, 0xd3, 0xab, 0x3c,
	0x73, 0x78, 0xde, 0x2a, 0x93, 0xda, 0x01, 0x43, 0xbf, 0xd4, 0xb2, 0x4a, 0x8c, 0xaf, 0xea, 0xb6,
	0x25, 0xc6, 0x57, 0x77, 0xbb, 0xf7, 0xa0, 0x21, 0x7b, 0x00, 0xba, 0x6f, 0xb8, 0x9a, 0x2d, 0xca,
	0x73, 0xaf, 0x1a, 0x8a, 0x58, 0xf9, 0x0e, 0x94, 0x62, 0xcd, 0x97, 0xaf, 0x14, 0x5b, 0x7a, 0x32,
	0xce, 0x9a, 0xd2, 0xf0, 0xee, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x3f, 0xa7, 0x66, 0x76,
	0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SwapLibClient is the client API for SwapLib service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SwapLibClient interface {
	PingWalletRPC(ctx context.Context, in *PingWalletRPCRequest, opts ...grpc.CallOption) (*PingWalletRPCResponse, error)
	NewAddress(ctx context.Context, in *NewAddressRequest, opts ...grpc.CallOption) (*NewAddressResponse, error)
	Initiate(ctx context.Context, in *InitiateRequest, opts ...grpc.CallOption) (*InitiateResponse, error)
	Participate(ctx context.Context, in *ParticipateRequest, opts ...grpc.CallOption) (*ParticipateResponse, error)
	Redeem(ctx context.Context, in *RedeemRequest, opts ...grpc.CallOption) (*RedeemResponse, error)
	Refund(ctx context.Context, in *RefundRequest, opts ...grpc.CallOption) (*RefundResponse, error)
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
	ExtractSecret(ctx context.Context, in *ExtractSecretRequest, opts ...grpc.CallOption) (*ExtractSecretResponse, error)
	Audit(ctx context.Context, in *AuditRequest, opts ...grpc.CallOption) (*AuditResponse, error)
	GetTx(ctx context.Context, in *GetTxRequest, opts ...grpc.CallOption) (*GetTxResponse, error)
}

type swapLibClient struct {
	cc *grpc.ClientConn
}

func NewSwapLibClient(cc *grpc.ClientConn) SwapLibClient {
	return &swapLibClient{cc}
}

func (c *swapLibClient) PingWalletRPC(ctx context.Context, in *PingWalletRPCRequest, opts ...grpc.CallOption) (*PingWalletRPCResponse, error) {
	out := new(PingWalletRPCResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/PingWalletRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapLibClient) NewAddress(ctx context.Context, in *NewAddressRequest, opts ...grpc.CallOption) (*NewAddressResponse, error) {
	out := new(NewAddressResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/NewAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapLibClient) Initiate(ctx context.Context, in *InitiateRequest, opts ...grpc.CallOption) (*InitiateResponse, error) {
	out := new(InitiateResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/Initiate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapLibClient) Participate(ctx context.Context, in *ParticipateRequest, opts ...grpc.CallOption) (*ParticipateResponse, error) {
	out := new(ParticipateResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/Participate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapLibClient) Redeem(ctx context.Context, in *RedeemRequest, opts ...grpc.CallOption) (*RedeemResponse, error) {
	out := new(RedeemResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/Redeem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapLibClient) Refund(ctx context.Context, in *RefundRequest, opts ...grpc.CallOption) (*RefundResponse, error) {
	out := new(RefundResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/Refund", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapLibClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapLibClient) ExtractSecret(ctx context.Context, in *ExtractSecretRequest, opts ...grpc.CallOption) (*ExtractSecretResponse, error) {
	out := new(ExtractSecretResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/ExtractSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapLibClient) Audit(ctx context.Context, in *AuditRequest, opts ...grpc.CallOption) (*AuditResponse, error) {
	out := new(AuditResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/Audit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swapLibClient) GetTx(ctx context.Context, in *GetTxRequest, opts ...grpc.CallOption) (*GetTxResponse, error) {
	out := new(GetTxResponse)
	err := c.cc.Invoke(ctx, "/protobind.SwapLib/GetTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SwapLibServer is the server API for SwapLib service.
type SwapLibServer interface {
	PingWalletRPC(context.Context, *PingWalletRPCRequest) (*PingWalletRPCResponse, error)
	NewAddress(context.Context, *NewAddressRequest) (*NewAddressResponse, error)
	Initiate(context.Context, *InitiateRequest) (*InitiateResponse, error)
	Participate(context.Context, *ParticipateRequest) (*ParticipateResponse, error)
	Redeem(context.Context, *RedeemRequest) (*RedeemResponse, error)
	Refund(context.Context, *RefundRequest) (*RefundResponse, error)
	Publish(context.Context, *PublishRequest) (*PublishResponse, error)
	ExtractSecret(context.Context, *ExtractSecretRequest) (*ExtractSecretResponse, error)
	Audit(context.Context, *AuditRequest) (*AuditResponse, error)
	GetTx(context.Context, *GetTxRequest) (*GetTxResponse, error)
}

func RegisterSwapLibServer(s *grpc.Server, srv SwapLibServer) {
	s.RegisterService(&_SwapLib_serviceDesc, srv)
}

func _SwapLib_PingWalletRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingWalletRPCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).PingWalletRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/PingWalletRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).PingWalletRPC(ctx, req.(*PingWalletRPCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwapLib_NewAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).NewAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/NewAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).NewAddress(ctx, req.(*NewAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwapLib_Initiate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitiateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).Initiate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/Initiate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).Initiate(ctx, req.(*InitiateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwapLib_Participate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParticipateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).Participate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/Participate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).Participate(ctx, req.(*ParticipateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwapLib_Redeem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RedeemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).Redeem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/Redeem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).Redeem(ctx, req.(*RedeemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwapLib_Refund_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).Refund(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/Refund",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).Refund(ctx, req.(*RefundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwapLib_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).Publish(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwapLib_ExtractSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExtractSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).ExtractSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/ExtractSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).ExtractSecret(ctx, req.(*ExtractSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwapLib_Audit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).Audit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/Audit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).Audit(ctx, req.(*AuditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SwapLib_GetTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwapLibServer).GetTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobind.SwapLib/GetTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwapLibServer).GetTx(ctx, req.(*GetTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SwapLib_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobind.SwapLib",
	HandlerType: (*SwapLibServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PingWalletRPC",
			Handler:    _SwapLib_PingWalletRPC_Handler,
		},
		{
			MethodName: "NewAddress",
			Handler:    _SwapLib_NewAddress_Handler,
		},
		{
			MethodName: "Initiate",
			Handler:    _SwapLib_Initiate_Handler,
		},
		{
			MethodName: "Participate",
			Handler:    _SwapLib_Participate_Handler,
		},
		{
			MethodName: "Redeem",
			Handler:    _SwapLib_Redeem_Handler,
		},
		{
			MethodName: "Refund",
			Handler:    _SwapLib_Refund_Handler,
		},
		{
			MethodName: "Publish",
			Handler:    _SwapLib_Publish_Handler,
		},
		{
			MethodName: "ExtractSecret",
			Handler:    _SwapLib_ExtractSecret_Handler,
		},
		{
			MethodName: "Audit",
			Handler:    _SwapLib_Audit_Handler,
		},
		{
			MethodName: "GetTx",
			Handler:    _SwapLib_GetTx_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "atomicswap.proto",
}
